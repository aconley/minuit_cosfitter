# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT(minuit_cosfitter-twoscriptm,0.3.12,alexander.conley@colorado.edu)
AC_LANG_CPLUSPLUS
AC_CONFIG_SRCDIR([src])
AM_INIT_AUTOMAKE
AC_CONFIG_MACRO_DIR([m4])

dnl Checks for programs.
AC_PROG_CXX
AC_PROG_LIBTOOL

dnl Initialize CXXFLAGS and CPPFLAGS
dnl CPPFLAGS are preprocessor flags, CXX are compiler flags
dnl Unless --enable-debug is set, then -O3 is used
AC_ARG_WITH(cppflags,
            [  --with-cppflags=VAL     CPPFLAGS value (def: )],
            [CPPFLAGS="$withval"],[CPPFLAGS=""] )
AC_ARG_WITH(cxxflags,
            [  --with-cxxflags=VAL     CXXFLAGS value (def: -Wall)],
            [ CXXFLAGS=$withval ], [CXXFLAGS="-Wall"])
AC_ARG_ENABLE(debug,
              [  --enable-debug          Add -g to CXXFLAGS (else add -O3)],
              [ CXXFLAGS="-g $CXXFLAGS"], [ CXXFLAGS="$CXXFLAGS -O3"])
AC_ARG_ENABLE(profile,
              [  --enable-profile        Add gprof-friendly stuff to CXXFLAGS],
              [ CXXFLAGS="$CXXFLAGS -pg -fprofile-arcs" ],)

dnl Open-MP support is necessary for recent versions of Minuit2
AC_OPENMP
if test $OPENMP_CXXFLAGS; then
   CXXFLAGS="$CXXFLAGS $OPENMP_CXXFLAGS"
   CPPFLAGS="$CPPFLAGS $OPENMP_CPPFLAGS"
fi

dnl Use rpath so you don't have to set LD_LIBRARY_PATH
AC_ARG_ENABLE( rpath,
  [  --enable-rpath          Use rpath so you don't have to set LD_LIBRARY_PATH ],
  rpathset=$enableval, rpathset="" )

dnl Minuit head
AC_ARG_WITH(minuitinc,
            [  --with-minuitinc=VAL    VAL=-IDIR, DIR has Minuit2 heads],
	    [ minuitinc="$withval/" CPPFLAGS="$CPPFLAGS -I$minuitinc"],
            [ minuitinc=] )
AC_ARG_WITH( minuitlib, 
            [  --with-minuitlib=DIR    DIR=-LDIR, has libMinuit2],
            minuitlib="$withval/", minuitlib= )

AC_CHECK_HEADER(Minuit2/MnConfig.h,,
      [if test $minuitinc; then
        AC_MSG_ERROR("Minuit2/MnConfig.h is not where set by --with-minuitinc")
       elif test $minuitlib; then
        AC_CHECK_HEADER($minuitlib/../include/Minuit2/MnConfig.h,
        [minuitinc="$minuitlib/../include/" CPPFLAGS="$CPPFLAGS -I$minuitinc"],
         AC_MSG_ERROR("Minuit2/MnConfig.h not found; use --with-minuitinc"))
       else
         AC_CHECK_HEADER($prefix/include/Minuit2/MnConfig.h,
	   CPPFLAGS="$CPPFLAGS -I$prefix/include",
           AC_MSG_ERROR("Minuit2/MnConfig.h not found in default dirs; use --with-minuitinc"))
       fi])

dnl Look for minuit libraries
if test $minuitlib; then
   AC_MSG_RESULT( Checking Minuit library in user specified path: $minuitlib )

   if test $rpathset; then
     LDFLAGS="$LDFLAGS -L$minuitlib -Wl,--rpath -Wl,$minuitlib"
   else
     LDFLAGS="$LDFLAGS -L$minuitlib"
   fi

   LIBS="$LIBS -lMinuit2"
   AC_TRY_LINK( [#include<Minuit2/MnUserParameters.h>],                         
                [ROOT::Minuit2::MnUserParameters upar],
                [echo "Found libMinuit2"],
                [AC_MSG_ERROR("Minuit library not found in user specified locat\
ion")])  
fi

dnl Look for the gsl libraries and headers
AC_ARG_WITH( gsllib,
            [  --with-gsllib=DIR       DIR=-LDIR, has libgsl and libgslcblas],
            gsllib="$withval/", gsllib= )
if test $gsllib; then
  if test $rpathset; then
     LDFLAGS="$LDFLAGS -L$gsllib -Wl,--rpath -Wl,$gsllib"
  else
     LDFLAGS="$LDFLAGS -L$gsllib"
  fi
  AC_CHECK_LIB( gsl, main, ,
      AC_MSG_ERROR("libgsl not in location specified by --with-gsllib"),
      [ -lm -lgslcblas -L$gsllib ] )
  AC_CHECK_LIB( gslcblas, main, ,
      AC_MSG_ERROR("libgslcblas not in location specified by --with-gsllib"),
      [ -lm -L$gsllib ] )
else
  AC_CHECK_LIB( gsl, main, ,
      AC_MSG_ERROR("libgsl not found; use --with-gsllib"), [-lm -lgslcblas] )
  AC_CHECK_LIB( gslcblas, main, ,
      AC_MSG_ERROR("libgslcblas not found; use --with-gsllib"), [-lm] )
fi

AC_ARG_WITH(gslinc,
        [  --with-gslinc=VAL       VAL=-IVAL, has gsl include files ],
	[ gslinc="$withval/" CPPFLAGS="$CPPFLAGS -I$gslinc" ],
        [ gslinc=] )
AC_MSG_RESULT( Checking GSL Headers )
AC_CHECK_HEADERS([gsl/gsl_errno.h gsl/gsl_sf_ellint.h gsl/gsl_integration.h gsl/gsl_odeiv.h ],,
  [ if test $gslinc; then
   AC_MSG_ERROR("gsl headers not in location specified by --with-gslinc")
   elif test $gsllib; then
    AC_CHECK_HEADER($gsllib/../include/gsl/gsl_sf_ellint.h,
     [gslinc="$gsllib/../include/" CPPFLAGS="$CPPFLAGS -I$gslinc"],
      AC_MSG_ERROR("Can't find gsl includes in user specified location; use --with-gslinc"))
    else
      AC_MSG_ERROR("Can't find gsl includes; use --with-gslinc")
   fi ] )


dnl Handle Mac OS X Accelerate framework
AC_ARG_ENABLE( accelerate,    
   [  --enable-accelerate     Use OS X Accelerate to do matrix inversion ],
   useaccelerateset=$enableval, useaccelerateset="" )
if test $useaccelerateset; then
   AC_MSG_RESULT( Using OSX Accelerate framework for matrix inversion )
   AC_DEFINE( USEACCELERATE, 1 )
   LDFLAGS="$LDFLAGS -framework Accelerate"
fi

dnl Handle ATLAS
dnl AC_LANG_C
AC_ARG_ENABLE( atlas,
         [  --enable-atlas          Use ATLAS to do matrix inversion ],
         useatlasset=$enableval,useatlasset="" )

if test $useatlasset; then
  AC_MSG_RESULT(Using ATLAS for matrix inversion)
  dnl Set so code understands
  AC_DEFINE( USEATLAS, 1 )

  if test $useaccelerateset; then
    AC_MSG_ERROR( Can't use both Accelerate and ATLAS )
  fi

  dnl User specified path
  AC_ARG_WITH( atlaslib,
           [  --with-atlaslib=DIR     DIR=-LDIR, has libatlas, etc.],
           [ atlaslib="$withval/" ],
           [ atlaslib= ] )

  if test $atlaslib; then
    dnl Apppend -l commands
    if test $rpathset; then
      LDFLAGS="$LDFLAGS -L$atlaslib -Wl,--rpath -Wl,$atlaslib"
    else
      LDFLAGS="$LDFLAGS -L$atlaslib"
    fi
  fi

  dnl User specified headers
  AC_ARG_WITH(atlasinc,
      [  --with-atlasinc=VAL     VAL=-IVAL, has atlas include files (clapack.h) ],
      [ atlasinc="$withval/" CPPFLAGS="$CPPFLAGS -I$atlasinc"],
       [atlasinc=] )


dnl Now check for headers
   AC_MSG_RESULT( Checking for ATLAS headers )
   AC_CHECK_HEADER(clapack.h,,
    [ if test $atlasinc; then
       AC_MSG_ERROR("ATLAS headers not in location specified by --with-atlasinc: $atlasinc")
      elif test $atlaslib; then
       AC_CHECK_HEADER($atlaslib/../../include/clapack.h,
        [atlasinc="$atlaslib/../../include/" CPPFLAGS="$CPPFLAGS -I$atlasinc"],
         AC_MSG_ERROR("Can't find ATLAS includes; use --with-atlasinc"))
       else
         AC_MSG_ERROR("Can't find ATLAS includes; use --with-atlasinc")
      fi ] )
  
   #Add -l includes for ATLAS
   LDFLAGS="$LDFLAGS -llapack_atlas -lcblas -lf77blas -latlas"
fi

# Checks for header files.
AC_HEADER_STDC

AC_CONFIG_FILES([Makefile
                 src/Makefile])
AC_OUTPUT
